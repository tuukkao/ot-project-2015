All GET requests include pagination as well as ways to filter based on the fields of the data model.
The following query string fields are available for pagination:
    * page: The page to fetch. Defaults to 1.
    * limit: The number of objects to fetch. Defaults to 10.
The /blog, /post and /user get requests can be paginated.

/user
    * POST: create new user
    * GET: get a list of users.

/user/<username>
    * GET: Get profile information/feed
    * PUT: update profile information
    * DELETE: Remove the user and all the associated content

/blog
    * GET: Get a list of blogs with optional filtering.
      - filter parameters: author, created_at
    * POST: Add a new blog.

/blog/<blogid>
    * put: Update blog information
    * DELETE: Remove blog

/post
    * GET: Get a time-sorted list of all the posts in the service.
      - filter parameters: parent_blog, author, created_at, modified_At
    * POST: Add a new post

/post/<postid>
    * GET: Get the post content.
    * PUT: Update the post.
    * DELETE: Delete the post

/post/<postid>/comment
    * GET: Get the comments related to postid.
    * POST: Add a new comment.

/post/<postid>/comment/<commentid>
    * GET: Get the comment data
    * PUT: Modify comment
    * DELETE: Delete comment